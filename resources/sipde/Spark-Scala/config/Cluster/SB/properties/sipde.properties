#######################
#EXPERIMENT PARAMETERS
#######################

#Distributed (true) or local run
localRun=false

#Number of islands
workers=16

#Generations to compute in each local island evolution
localIterations=200

#Run the sequential algorithm before of after the parallel algorithm
#Note:any number of sequential and parallel runs can be combined into the same experiment
SecuentialFirst=false

#Number of sequential runs (can be 0)
secRuns=0

#Number of parallel runs (can be 0)
parRuns=11

#Maximum time for each independent run
#Note:this is one of the stopping criteria supported
maxTime=259200

######################
#ALGORITHM PARAMETERS
######################

#Included benchmarking functions:
# 1.Implemented by our own: SphereFunction, Schwefel, Rosenbrock, Rastrigin, Ackley, Griewank
# 2.From the BBOB benchmark (the external library libcjavabbob.so must be provided): BBOBRosenbrock(f8), BBOBRastrigin(f15), BBOBSchaffers(f17), BBOBGriewankRosenbrock(f19), BBOBSchwefel(f20), BBOBGallagher(f22)
#   Warning: use only the name, e.g. "BBOBRosenbrock", not "BBOBRosenbrock(f8)"
# 3.Biological Systems models (the external library "libSBLib.so" must be provided): Circadian, Mendes, Nfkb
#Your own custom evaluators can also be used. See the file Evaluator.scala for more details
evaluator=Circadian

#Name of the Local Solver to use (if empty, no LS is used)
#Note: the LS is only included in the parallel implementation and currently
#  only the NL2SOL solver is supported (the external library "libSBLib.so" must be provided)
#  which can be only used in combination with Biological Systems models
localSolver=

#Size of the population. Will be split into $workers islands
populationSize=256

#Size of the elements (number of parameters of the problem)
elementSize=13

#F factors. Each island will pick one randomly. Use only 1 for homogeneous configurations
#Note: the sequential algorithm will pick the first one
F=0.7,0.8,0.9

#CR factors. Each island will pick one randomly. Use only 1 for homogeneous configurations
#Note: the sequential algorithm will pick the first one
CR=0.8,0.9

#Value to reach
#Note:this is one of the stopping criteria supported
target=-999.99999999

#Minimum distance to consider an element "too close" to another in the taboo list
#Note: has to be present even if no Local Solver is used, but can be any value
minDistance=5

#Max number of evaluations in each independent run
#Note:this is one of the stopping criteria supported
maxEvaluations=300000000

#Lower and upper limits of all parameters
#If each parameter has a different limit, the evaluator can set an array in code, and the array of limits take precedence over this value
#limits for each benchmark: -100, -100, -30, -5.12, -32, -600
lowerLimit=-5
#limits for each benchmark: 100, 100, 30, 5.12, 32, 600
upperLimit=5
